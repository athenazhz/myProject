<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dao.ItemsMapper">
  <resultMap id="BaseResultMap" type="com.mybatis.pojo.Items">
    <id column="i_id" jdbcType="INTEGER" property="iId" />
    <result column="c_id" jdbcType="INTEGER" property="cId" />
    <result column="i_name" jdbcType="VARCHAR" property="iName" />
    <result column="in_time" jdbcType="TIMESTAMP" property="inTime" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="i_price" jdbcType="DOUBLE" property="iPrice" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <association property="kinds" javaType="Kinds">
    	<id column="k_id" jdbcType="INTEGER" property="kId" />
    	<result column="k_name" jdbcType="VARCHAR" property="kName" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_jilian">
    <where>
    	i.c_id=k.k_id and
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and i.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and i.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and i.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and i.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    i_id, c_id, i_name, in_time, out_time, i_price, state, url
  </sql>
  <select id="vagueQuery" parameterType="com.mybatis.pojo.ItemsExample" resultMap="BaseResultMap">
    select * from items i,kinds k
    <if test="_parameter != null">
      <include refid="Example_Where_jilian" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.mybatis.pojo.ItemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items
    where i_id = #{iId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from items
    where i_id = #{iId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatis.pojo.ItemsExample">
    delete from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatis.pojo.Items">
    insert into items (c_id, i_name, 
      in_time, out_time, i_price, 
      state, url)
    values (#{cId,jdbcType=INTEGER}, #{iName,jdbcType=VARCHAR}, 
      #{inTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP}, #{iPrice,jdbcType=DOUBLE}, 
      #{state,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mybatis.pojo.Items">
    insert into items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        i_id,
      </if>
      <if test="cId != null">
        c_id,
      </if>
      <if test="iName != null">
        i_name,
      </if>
      <if test="inTime != null">
        in_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="iPrice != null">
        i_price,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="url != null">
        url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="iId != null">
        #{iId,jdbcType=INTEGER},
      </if>
      <if test="cId != null">
        #{cId,jdbcType=INTEGER},
      </if>
      <if test="iName != null">
        #{iName,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iPrice != null">
        #{iPrice,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatis.pojo.ItemsExample" resultType="java.lang.Long">
    select count(*) from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update items
    <set>
      <if test="record.iId != null">
        i_id = #{record.iId,jdbcType=INTEGER},
      </if>
      <if test="record.cId != null">
        c_id = #{record.cId,jdbcType=INTEGER},
      </if>
      <if test="record.iName != null">
        i_name = #{record.iName,jdbcType=VARCHAR},
      </if>
      <if test="record.inTime != null">
        in_time = #{record.inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.iPrice != null">
        i_price = #{record.iPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update items
    set i_id = #{record.iId,jdbcType=INTEGER},
      c_id = #{record.cId,jdbcType=INTEGER},
      i_name = #{record.iName,jdbcType=VARCHAR},
      in_time = #{record.inTime,jdbcType=TIMESTAMP},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      i_price = #{record.iPrice,jdbcType=DOUBLE},
      state = #{record.state,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatis.pojo.Items">
    update items
    <set>
      <if test="cId != null">
        c_id = #{cId,jdbcType=INTEGER},
      </if>
      <if test="iName != null">
        i_name = #{iName,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null">
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iPrice != null">
        i_price = #{iPrice,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
    </set>
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatis.pojo.Items">
    update items
    set c_id = #{cId,jdbcType=INTEGER},
      i_name = #{iName,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      i_price = #{iPrice,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR}
    where i_id = #{iId,jdbcType=INTEGER}
  </update>
</mapper>